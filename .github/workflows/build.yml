name: build

on: push

jobs:
    osx:
        runs-on: macos-13
    
        steps:
                - uses: actions/checkout@v4
                - name: Build
                  run: |
                      ./build_osx.sh
                - name: Upload
                  uses: actions/upload-artifact@v4
                  with:
                    path: ./Plugins/**/*
                    name: tolua-osx
                    compression-level: 0
        
    
    ios:
        runs-on: macos-13
    
        steps:
                - uses: actions/checkout@v4
                - name: Build
                  run: |
                    ./build_ios.sh
                - name: Upload
                  uses: actions/upload-artifact@v4
                  with:
                    path: ./Plugins/**/*
                    name: tolua-ios
                    compression-level: 0
    
    window:
        runs-on: windows-latest

        defaults:
            run:
                shell: bash
    
        steps:
                - uses: actions/checkout@v4
                - name: Build
                  run: |
                    # ./build_win32.sh
                    ./build_win64.sh
                - name: Upload
                  uses: actions/upload-artifact@v4
                  with:
                    path: ./Plugins/**/*
                    name: tolua-win
                    compression-level: 0
  
    linux:
        runs-on: ubuntu-22.04
    
        steps:
                - uses: actions/checkout@v4
                - name: Build
                  run: |
                    # ./build_win32.sh
                    ./build_ubuntu.sh
                - name: Upload
                  uses: actions/upload-artifact@v4
                  with:
                    path: ./Plugins/**/*
                    name: tolua-linux
                    compression-level: 0
    
    ohos:
        runs-on: ubuntu-22.04
    
        steps:
                - uses: actions/checkout@v4
                - name: Install OHOS SDK
                  run: |
                      cd ~
                      curl -O https://repo.huaweicloud.com/harmonyos/os/4.1-Release/ohos-sdk-windows_linux-public.tar.gz
                      tar xvfz ohos-sdk-windows_linux-public.tar.gz
                      cd ohos-sdk/linux
                      unzip -o -d ./ native-linux-x64-4.1.7.5-Release.zip
                      # 安装32位依赖
                      sudo apt-get install gcc-multilib
                - name: Build arm64
                  run: |
                    chmod +x build_ohos_arm64.sh
                    export OHOS_SDK=~/ohos-sdk/linux 
                    ./build_ohos_arm64.sh

                - name: Build arm
                  run: |
                    chmod +x build_ohos_arm.sh
                    export OHOS_SDK=~/ohos-sdk/linux 
                    ./build_ohos_arm.sh
                - name: Upload
                  uses: actions/upload-artifact@v4
                  with:
                    path: ./Plugins/**/*
                    name: tolua-ohos
                    compression-level: 0


    android:
        runs-on: ubuntu-22.04
    
        steps:
                - uses: actions/checkout@v4
                - name: Setup Android NDK
                  uses: nttld/setup-ndk@v1
                  with:
                    ndk-version: r21e
                - name: Build arm64
                  run: |
                    export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
                    chmod 777 ./build_arm64.sh
                    ./build_arm64.sh
                - name: Build arm
                  run: |
                    export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
                    chmod 777 ./build_arm.sh
                    ./build_arm.sh
                - name: Upload
                  uses: actions/upload-artifact@v4
                  with:
                    path: ./Plugins/**/*
                    name: tolua-android
                    compression-level: 0
    
    publish:
        runs-on: ubuntu-22.04
        needs: [osx, ios, window, linux, ohos, android]
        if: startsWith(github.ref, 'refs/tags/')
        steps:
                - uses: actions/download-artifact@v4
                  name: download all artifacts
                  with:
                    path: tolua
                    pattern: tolua-*
                    merge-multiple: true
                - run: ls -R tolua
                - name: 'Tar files'
                  run: tar -cvf tolua_runtime.tar tolua/
                - name: Create Release
                  uses: softprops/action-gh-release@v2
                  with:
                    tag_name: ${{ github.ref_name }}
                    name: Release ${{ github.ref_name }}
                    files: |
                      tolua.tar
                  
                

                    